// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id   Int @id @default(autoincrement())
  id42 Int @unique

  name        String       @unique
  gameProfile GameProfile?
  twoFA       Boolean      @default(false)
  twoFASecret String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  // Connexion from another table
  //channelOwn Channel[] @relation("owners")
  channel Channel[] @relation("users")
  message Message[]

  @@map("users")
}

model GameProfile {
  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  wins Int
  loss Int

  @@map("gameProfile")
}

model Channel {
  id Int @id @unique @default(autoincrement())

  // This is not urgent
  name        String?
  avatar      String?
  description String?
  createdAt   DateTime @default(now())
  updateAt    DateTime @default(now()) @updatedAt

  //owner   User @relation("owners", fields: [ownerId], references: [id])
  //ownerId Int

  users User[] @relation("users")

  messagesId Int[]
  Message    Message[]
  //User       User[] @relation("users")
  userId     Int?

  @@map("channels")
}

model Message {
  id Int @unique @default(autoincrement())

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  channel   Channel @relation(fields: [channelId], references: [id])
  channelId Int     @unique

  author   User @relation(fields: [authorId], references: [id])
  authorId Int  @unique

  content String @db.VarChar(2000)

  @@map("messages")
}
